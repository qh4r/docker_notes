* docker0 is a bridge that is created and used by all docker containers
* its virtual and created inside linux Kernel
* it's software so it has no prots per se.
- can use bridge-utils (might need to install) to see details
- apt-get install bridge-utils 
* then
- brctl show docker0
* 'interface' column shown by brctl show works as PORT

* the docker0 bridge sits on host docker checks for available network from pool of defaults,
* and uses it for all containers, in my case for example it was:
* 172.17.0.2 
* ^ in such case host will be 172.17.0.1
* you can docker inspect and look for NetworkSettings
	* Gateway is host ip in docker0 network
	* can also see mapped ports ther
	* and it's ipaddress
	
* container have hosts and resolv.conf files for networkin inside thei dedicated folders
* on host /var/lib/docker/containers/{container id}
* it's always copied and overriden by host
* we can override those setting s with commands  in docker run cli
* example:
- docker run -it --dns=8.8.4.4 --name=dns1 ubuntu-net /bin/bash

* example dockerfile for fun with ports:
FROM ubuntu:15.04
RUN apt-get update && apt-get install -y \
	apache2 \
	iputils-ping \
	traceroute

EXPOSE 80
ENTRYPOINT ["apache2ctl"]
CMD ["-D", "FOREGROUND"]

- docker build --tag="apache_server" .
- docker run -d -p 5001:80 ** map 5001 on host to 80 on container

* shows mapped ports
- docker port {container name or id}

* default mapping is for tcp

* we can use udp like this:
docker run -d -p 5002:80/udp --name=server_u working_server

* -P (capital p) causes all EXPOSED ports to be mapped on the same host ports 
* so for EXPOSE 80 5000 -> acts like -> -p 80:80 5000:5000

************************
** LINKING CONTAINERS **

used:
FROM ubuntu:15.04

RUN apt-get update \
 && apt-get install -y iputils-ping traceroute apache2

EXPOSE 80

ENTRYPOINT ["apache2ctl"]
CMD ["-D", "FOREGROUND"]

docker run --name=source -d link_img

docker run --name=reciever -it --link=source:src-alias ubuntu:15.04 /bin/bash
* we pass name of link source and give it alias after :
* ALIAS IS REQUIRED

* when called on reciever:
- env | grep SRC_ALIAS
* prints:
SRC_ALIAS_PORT_80_TCP_PROTO=tcp
SRC_ALIAS_PORT_80_TCP_ADDR=172.17.0.2
SRC_ALIAS_NAME=/reciever/src-alias
SRC_ALIAS_PORT_80_TCP=tcp://172.17.0.2:80
SRC_ALIAS_PORT_80_TCP_PORT=80
SRC_ALIAS_PORT=tcp://172.17.0.2:80
* /etc/hosts * also get mapping:
172.17.0.2	src-alias 6023193fdeb1 source


